{"version":3,"sources":["firebaseApp.js","Header.js","DisplaySelection.js","ReviewMakeup.js","DropDown.js","Footer.js","App.js","serviceWorker.js","Saveditemsdisplay.js","Saveditems.js","auth.js","ProtectedRoute.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Header","auth","firestore","analytics","useAuthState","user","useState","id","style","float","top","margin","right","position","display","to","marginRight","cursor","color","textDecoration","fontSize","className","onClick","signOut","then","localStorage","removeItem","console","log","catch","error","message","provider","GoogleAuthProvider","signInWithPopup","data","setItem","email","DisplaySection","props","items","map","displayItem","i","key","_id","src","image_link","alt","name","href","product_link","e","item","preventDefault","getItem","db","collection","doc","get","docSnapshot","exists","toast","set","username","marginLeft","ReviewMakeup","userPost","event","setState","review","target","value","postSubmission","database","ref","push","state","removeSubmission","postRemoval","child","remove","submittedData","on","response","startState","val","newState","usersInput","post","action","onChange","this","type","minLength","maxLength","placeholder","class","Component","DropDown","userpicks","userSelection","htmlFor","getProduct","Footer","App","userChoice","axios","url","method","responseType","result","currentProducts","getUserInput","Boolean","window","location","hostname","match","Saveditemsdisplay","deleteItem","refid","Saveditems","setItems","deleted","setDeleted","useEffect","docs","where","querySnapshot","forEach","obj","Object","assign","delete","Date","ProtectedRoute","component","rest","render","checkAuthenticated","pathname","from","routing","exact","path","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c73f5c0b.chunk.js","sourcesContent":["import firebase from 'firebase';\n//App's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyD4iDNH_fPf65dmAGjFREQHQ_jHMCs1ZEw\",\n  authDomain: \"project5-16351.firebaseapp.com\",\n  databaseURL: \"https://project5-16351.firebaseio.com\",\n  projectId: \"project5-16351\",\n  storageBucket: \"project5-16351.appspot.com\",\n  messagingSenderId: \"188499920009\",\n  appId: \"1:188499920009:web:6c6332896151214c0ab258\",\n  measurementId: \"G-6F6HD55E6L\"\n\n};\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n export default firebase;","import React, { Component ,useState} from 'react';\nimport GoogleButton from 'react-google-button'\nimport firebase from './firebaseApp';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport { Link } from 'react-router-dom';\n\nimport {useAuthState} from 'react-firebase-hooks/auth';\nimport {useCollectionData} from 'react-firebase-hooks/firestore';\n\n\n\n\n\nfunction Header() {\n\n  const auth = firebase.auth();\nconst firestore = firebase.firestore();\nconst analytics = firebase.analytics();\nconst [user]=useAuthState(auth);\nconst [show, setShow] = useState(false);\n\n// sign in function with google\n\n\n  const signInWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    auth.signInWithPopup(provider).then(data=>{\n      localStorage.setItem(\"email\",data.user.email)\n    \n\n    });\n  \n  }\n\n  const logOut = () => {\n    auth.signOut().then(()=> {\n      localStorage.removeItem(\"email\");\n      console.log('logged out')\n    }).catch((error) => {\n      console.log(error.message)\n    })\n  }\n\n\n  const handleClose = () => setShow(false);\n  const handleShow = (e) =>{\n    e.preventDefault();\n    setShow(true)\n    \n  };\n\n  \n  \n  return (\n    <>\n    <header>\n      \n    <div id=\"menu\" style={{float:\"right\",top:\"0\",margin:\"10px\", right:\"0\", position: \"absolute\" ,display:\"flex\"}}>\n\n    {user ?<> <Link to=\"/\"  style={{marginRight:\"8px\" ,cursor:\"pointer\",color: 'inherit', textDecoration: 'inherit',fontSize:\"20px\"}} >Home</Link><Link to=\"/saveditems\"  style={{marginRight:\"18px\" ,cursor:\"pointer\",color: 'inherit', textDecoration: 'inherit',fontSize:\"20px\"}} >SavedItems</Link> </>: \"\"}\n\n    {user ?<><button className=\"blue\" style={{cursor:\"pointer\"}} onClick={logOut}>Logout</button> </>: <GoogleButton\nonClick={ signInWithGoogle }\n/>}\n    \n\n    </div>\n   \n    <div className =\"wrapper\">\n      <h1>Welcome to Makeup Finder!</h1>\n      <p>This website is designed to help you find makeup products!</p>\n    </div>\n\n  </header>\n\n \n  </>\n  )\n}\n\nexport default Header\n","import React from 'react';\nimport ReviewMakeup from './ReviewMakeup';\nimport firebase from './firebaseApp';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\n//Used to display api function by getting the image and name of makeup product\nconst DisplaySection = (props ) => {\n\n\n  const onClick = (e,item) => {\n    e.preventDefault()\n\n    if(localStorage.getItem(\"email\"))\n    {\n      const db = firebase.firestore();\n      db.collection(\"saveditems\").doc(`doc-${item.id}`).get().then((docSnapshot) => {\n        console.log(docSnapshot.exists);\n        if (docSnapshot.exists) {\n          toast(\"You already Have this Product Saved\");\n         \n        } else {\n          db.collection(\"saveditems\").doc(`doc-${item.id}`).set({...item,username:localStorage.getItem(\"email\")}).then(data=>{\n            toast(\"Product Saved\")\n          });\n         \n        }\n    });\n    }\n\n    else{\n      toast(\"Please Login To Save Product\")\n    }\n  \n   \n    \n\n\n   \n   \n    \n\n\n  }\n    return(\n      <section >\n         <ToastContainer />\n        <div className=\"imageDisplay\">\n        {\n        // maps runs through and display the different products with name and image\n          props.items.map((displayItem,i) => {\n            return(\n            <div className=\"wrapper\" key={i}>\n              <div key={displayItem._id} >\n                <div className=\"makeupItems\">\n                    <img src={displayItem.image_link} alt={displayItem.name}></img> \n                    <p>{displayItem.name}</p>    \n                    <a href={displayItem.product_link} style={{cursor:\"pointer\"}}>Buy Now</a>  \n                    <a  onClick={(e)=>onClick(e,displayItem)} style={{marginLeft:\"5px\" ,cursor:\"pointer\"}}>Save Item</a>        \n                </div>\n            </div>\n            </div>\n          );    \n        })\n      }\n      </div> \n    </section> \n  )\n}\n\n\nexport default DisplaySection;\n","\nimport React, { Component } from 'react';\nimport firebase from './firebaseApp';\nimport DislaySection from './DisplaySelection'\n\nclass ReviewMakeup extends Component {\nconstructor() {\n    super();\n\n    this.state = {\n    //holds array of input\n    submittedData: [],\n    //user's input from when they write down their review\n    review: \"\"\n    }\n}\n// getting data from firebase \ncomponentDidMount() {\n    const dbRef = firebase.database().ref('productReviews');\n// creating a variable and storing it  \n    dbRef.on('value', (response) => {\n    const startState = response.val();\n    const newState = [];\n    //start state is an object so we use for loop to access user's review\n    for (let key in startState) {\n    const usersInput = {\n    //key generated by firebase and post holds input \n        id: key,\n        post: startState[key]\n    \n        }\n    //pushing a new user's review into our app\n        newState.push(usersInput);\n    }\n    //updating our component state using newstate\n    this.setState({\n        submittedData: newState\n    })\n    })\n}\n\n//deals with the textarea input\nuserPost = (event) => {\n    this.setState({\n        review: event.target.value\n    })\n}\n\n\n//User has submitted their review so they submit an object to firebase\npostSubmission = (event) => {\n    event.preventDefault();\n    const dbRef = firebase.database().ref('productReviews');\n    dbRef.push(this.state.review);\n    this.setState({\n    review: \"\"\n    })\n}\n\n\n\n//function to remove a review\nremoveSubmission = (postRemoval) => {\n    const dbRef = firebase.database().ref('productReviews');\n    dbRef.child(postRemoval).remove();\n}\n\nrender () {\n    return (\n    <div className=\"postSection\">\n        <form action=\"submit\">\n        <input onChange={this.userPost} type=\"textarea\" minLength=\"20\" maxLength=\"300\" value={this.state.review} placeholder=\"Write a review here!\"/>\n        <button class=\"submitButton\" onClick={this.postSubmission}>Submit</button>\n        </form>\n\n        { this.state.submittedData.map((review) => {\n            return (\n            <div className=\"addedUserReview\">\n                <div key={review.id}></div>\n                <p>{review.post}</p>\n                <button class=\"delete\" onClick={ () => this.removeSubmission(review.id)}>Delete Review</button>\n                \n            </div>\n            )\n        }) }\n    </div>\n    )\n}\n}\n\nexport default ReviewMakeup;\n","import React, { Component } from 'react';\nimport ReviewMakeup from './ReviewMakeup';\n\nclass DropDown extends Component {\n    constructor() {\n      super();\n      this.state = {\n        userSelection: \"\"\n      }\n    }\n  \n    userpicks = (event) => {\n      this.setState({\n        userSelection: event.target.value\n      })\n    }\n  \n    render() {\n      return(\n        <main>\n          <div class=\"wrapper\">\n            <form>\n              <div class=\"dropDownForm\">\n                <label htmlFor=\"makeupProduct\"></label>\n                <select onChange={ this.userpicks } name=\"makeupProduct\" id=\"makeupProduct\">\n                  <option value=\"lipstick\">Lipstick</option>\n                  <option value=\"eyeshadow\">EyeShadow</option>\n                  <option value=\"blush\">Blush</option>\n                </select>\n                \n                <button class=\"submitButton\"\n                  onClick={ (event) => this.props.getProduct(event, this.state.userSelection) }\n                > Submit\n                </button>\n              </div>\n            </form>\n          </div>\n        </main>\n      )\n    }\n  }\n  \n  export default DropDown;","import React, { Component } from 'react';\n\nclass Footer extends Component {\n//Copyright information\n  render() {\n    return (\n      <footer>\n        <div class=\"wrapper\">\n        <p>Copyright Usra Abid © 2020</p>\n        </div>\n      </footer>\n    )\n  }\n}\n\nexport default Footer;","import React, { Component } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport firebaseApp from './firebaseApp';\nimport Header from './Header.js';\nimport DropDown from './DropDown'\nimport DisplaySection from './DisplaySelection.js'\nimport ReviewMakeup from './ReviewMakeup.js'\nimport Footer from './Footer'\nimport DisplaySelection from './DisplaySelection.js';\nimport {ToastProvider, useToasts } from 'react-toast-notifications'\n\n\n\n\nclass App extends Component{\n  constructor() {\n    super()\n    this.state = {\n      currentProducts: [],\n    }\n  }\n//Making an Api call and putting userchoice to get different product types\n  getProduct = (event,userChoice) =>  {\n    event.preventDefault();\n      // run getProduct with userChoice as an argument \n    axios({ \n      url: `https://makeup-api.herokuapp.com/api/v1/products.json?product_type=${userChoice} `,\n      method: `GET`,\n      responseType: `json`\n    })\n    .then( (result) => {\n      this.setState({\n      //using the data from the api call into a state\n        currentProducts: result.data\n      }\n    );\n  })\n  }\n\n\n//Getting user input\n  getUserInput = (event) => {\n    event.preventDefault();\n  }\n\n//putting different components together \n  render(){\n      return (\n        <div className=\"App\">\n          \n          <Header />\n          <DropDown getProduct={ this.getProduct } / >\n          <DisplaySection items={this.state.currentProducts} />\n\t\t\t\t  <ReviewMakeup />\n          <Footer/>\n        </div>\n      );\n  }\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\n\nfunction Saveditemsdisplay(props) {\n    return (\n        <section >\n        <div className=\"imageDisplay\">\n        {\n        // maps runs through and display the different products with name and image\n          props.items.map((displayItem,i) => {\n            return(\n            <div className=\"wrapper\" key={i}>\n              <div key={displayItem._id} >\n                <div className=\"makeupItems\">\n                    <img src={displayItem.image_link} alt={displayItem.name}></img> \n                    <p>{displayItem.name}</p>    \n                    <a href={displayItem.product_link} style={{cursor:\"pointer\"}}>Buy Now</a>  \n\n                    <a  onClick={()=>props.deleteItem(displayItem.refid)}  style={{cursor:\"pointer\" ,marginLeft:\"5px\"}}>Delete Item</a>  \n                   \n                </div>\n            </div>\n            </div>\n          );    \n        })\n      }\n      </div> \n    </section> \n    )\n}\n\nexport default Saveditemsdisplay\n","import React, { useState,useEffect } from 'react'\nimport Header from './Header.js';\nimport DropDown from './DropDown'\nimport DisplaySection from './DisplaySelection.js'\nimport ReviewMakeup from './ReviewMakeup.js'\nimport Footer from './Footer'\nimport DisplaySelection from './DisplaySelection.js';\nimport Saveditemsdisplay from './Saveditemsdisplay.js';\nimport firebase from './firebaseApp';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nfunction Saveditems() {\n\n    const [items,setItems]=useState([]);\n    const [deleted,setDeleted]=useState(\"\");\n    const db = firebase.firestore();\n    \n\n\n    useEffect(() => {\n        const docs=[]\n        db.collection(\"saveditems\").where('username', '==',localStorage.getItem(\"email\")).get().then((querySnapshot) => {\n\n            querySnapshot.forEach((doc) => {\n                let obj=doc.data();\n                Object.assign(obj, {refid: doc.id});\n                \n               \n                console.log(obj)\n              \n              \n               docs.push(obj);\n               \n             \n            });\n\n            setItems([...docs]);\n        });\n    }, [deleted])\n\n    const deleteItem=(id)=>{\n\n        db.collection('saveditems').doc(id).delete().then(data=>{\n            setDeleted(+ new Date());\n\n            \n\n            toast(\"Product Removed\");\n\n\n        });\n       \n\n\n    }\n\n    return (\n        <div className=\"App\">\n             <ToastContainer />\n        <Header />\n   <Saveditemsdisplay items={items} deleteItem={deleteItem}/>\n             <ReviewMakeup />\n     <Footer/>\n      </div>\n    )\n}\n\nexport default Saveditems\n\n\n","\n\nclass Auth{\n\n\n\n\n\n\ncheckAuthenticated()\n{\n\n\n    let token=localStorage.getItem(\"email\");\n\n    if(!token)\n    {\n    \n        return false;\n    }\n    else{\n    \n        return true;\n    }\n}\n\n\n\n\n\n\n\n}\n\n\nexport default new Auth();","import React from 'react';\n\nimport {Route,Redirect} from 'react-router-dom';\n\nimport auth from './auth';\n\nexport default function ProtectedRoute({component:Component,...rest}) {\n    return (\n        <Route\n        {...rest}\n        render={\n\n  props=>{\n\n if( auth.checkAuthenticated())\n {\n return <Component {...props}/>\n }\n\n else{\n\n\n     return(\n\n<Redirect\nto={{\n pathname:\"/\",\n\n state:{\n     from:props.location\n }\n\n\n\n\n}}\n\n\n\n/>\n      )\n\n\n\n\n }\n\n\n\n  }\n\n\n        }\n        \n        \n        \n        \n        \n        />\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Route, Link, BrowserRouter as Router } from 'react-router-dom'\nimport Saveditems from './Saveditems';\nimport ProtectedRoute from './ProtectedRoute';\n\nconst routing = (\n  <Router>\n    <div>\n      <Route exact path=\"/\" component={App} />\n      <ProtectedRoute exact path=\"/saveditems\" component={Saveditems} />\n    \n    </div>\n  </Router>\n)\nReactDOM.render(routing, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}